{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "7CLINGO API",
        "description": "7CLINGO Application API"
    },
    "host": "http://52.201.119.41:8282",
    "basePath": "/",
    "tags": [
        {
            "name": "User",
            "description": "API for users in the system"
        },
        {
            "name": "Department",
            "description": "API for department in the system"
        },
        {
            "name": "File",
            "description": "File upload api"
        },
        {
            "name": "Document",
            "description": "API for Document"
        },
        {
            "name": "Service",
            "description": "All service api"
        },
        {
            "name": "Training Courses",
            "description": "API for training courses"
        },
        {
            "name": "VendorWeb",
            "description": "API for vendor Web"
        },
        {
            "name": "SharedAPI",
            "description": "Common API"
        },
        {
            "name": "VendorApp",
            "description": "API for vendor App"
        },
        {
            "name": "Client",
            "description": "API for client"
        },
        {
            "name": "Jobs",
            "description": "API for Jobs"
        },
        {
            "name": "Project",
            "description": "API for Projects"
        }
    ],
    "schemes": [
        "http"
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/v1/signin": {
            "post": {
                "summary": "Sign In",
                "tags": [
                    "User"
                ],
                "description": "signin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user signin",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/signInReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/auth"
                                    },
                                    {
                                        "$ref": "#/definitions/payload"
                                    }
                                ]
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/forgotpass": {
            "post": {
                "summary": "Forget Password",
                "tags": [
                    "User"
                ],
                "description": "Forget Password",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "forgot  password ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/forgetPassword"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/success"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/resetpass": {
            "post": {
                "summary": "Reset Password",
                "tags": [
                    "User"
                ],
                "description": "Reset Password",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "reset  password ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/resetPassword"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/success"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/signout": {
            "post": {
                "summary": "Sign Out",
                "tags": [
                    "User"
                ],
                "description": "Sign Out",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User sign out",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/signOut"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/success"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/changepass": {
            "post": {
                "summary": "Change Password",
                "tags": [
                    "User"
                ],
                "description": "Change Password",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Change Password",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/changePassword"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/success"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createuser": {
            "post": {
                "summary": "Create New User",
                "tags": [
                    "User"
                ],
                "description": "Create New User",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create New User",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/createUser"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getroles": {
            "post": {
                "summary": "Get dropdown list of roles for creating user",
                "tags": [
                    "User"
                ],
                "description": "Get dropdown list of roles for creating user",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get dropdown list of roles for creating user",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/getRoles"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/insertMasterDepartment": {
            "post": {
                "summary": "Create Master Departments",
                "tags": [
                    "Department"
                ],
                "description": "Create Master Departments",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Master Departments",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertMasterDept1"
                                },
                                "DetailsWithSubDept": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertMasterDept2"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "UserDetails": {
                                    "type": "object",
                                    "$ref": "#/definitions/success"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchMasterDepartment": {
            "post": {
                "summary": "Get List of Master Departments",
                "tags": [
                    "Department"
                ],
                "description": "Get List of Master Departments",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get List of Master Departments",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchMasterDeptReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/getMasterDept"
                                }
                            }
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getadminprofiledetails": {
            "post": {
                "summary": "Get details of admin",
                "tags": [
                    "User"
                ],
                "description": "Get details of admin",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get details of admin",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAdminDetails"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyadminprofile": {
            "post": {
                "summary": "Modify admin profile",
                "tags": [
                    "User"
                ],
                "description": "Modify admin profile",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify admin profile",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/modifyAdminInfo"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getadminstafflist": {
            "post": {
                "summary": "list of admin staff created",
                "tags": [
                    "User"
                ],
                "description": "list of admin staff created",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "list of admin staff created",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAdminStuff"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/adminstaffstatuschange": {
            "post": {
                "summary": "active or deactive any admin staff",
                "tags": [
                    "User"
                ],
                "description": "active or deactive any admin staff",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "active or deactive any admin staff",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/adminStuffChReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateMasterDepartment": {
            "post": {
                "summary": "active or deactive any admin staff",
                "tags": [
                    "Department"
                ],
                "description": "active or deactive any admin staff",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "active or deactive any admin staff",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateMasterDept1"
                                },
                                "DetailsWithSubDept": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateMasterDept2"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/deleteMasterDepartment": {
            "post": {
                "summary": "active or deactive any admin staff",
                "tags": [
                    "Department"
                ],
                "description": "active or deactive any admin staff",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "active or deactive any admin staff",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/masterDeptId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchActiveMasterDepartment": {
            "post": {
                "summary": "get active master department",
                "tags": [
                    "Department"
                ],
                "description": "get active master department",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "get active master department",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/activeMasterDept"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchDetailsByDepartment": {
            "post": {
                "summary": "Get Details of active master department",
                "tags": [
                    "Department"
                ],
                "description": "Get Details of active master department",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get Details of active master department",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/masterDeptId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/masterDeptdetails"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getlookuplist": {
            "post": {
                "summary": "Get Details of client contacts",
                "description": "Get Details of client contacts",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get Details of client contacts",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getLookUpList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getlocaiondescription": {
            "post": {
                "summary": "Get location description",
                "description": "Get location description",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get location description",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/placeName"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPlaceList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getcoordinatefromplaceid": {
            "post": {
                "summary": "Get Co-ordinate of selected location",
                "description": "Get Co-ordinate of selected location",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get Co-ordinate of selected location",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/placeName"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPlaceCoOrdinate"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/insertClientMasterDepartment": {
            "post": {
                "summary": "Insert client master department",
                "tags": [
                    "Department"
                ],
                "description": "Insert client master department",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Insert client master department",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertClientMasterDept1"
                                },
                                "DetailsWithSubDept": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertClientMasterDept2"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPlaceCoOrdinate"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getstaffdetails": {
            "post": {
                "summary": "Get staff details",
                "description": "Get staff details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get staff details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/staffIdDet"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getStaffDetails"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/firstsigninlog": {
            "post": {
                "summary": "To keep log that user has at least signed in once",
                "tags": [
                    "User"
                ],
                "description": "To keep log that user has at least signed in once",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "To keep log that user has at least signed in once",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifystaffdetails": {
            "post": {
                "summary": "Update userstaff details along with password",
                "description": "Update userstaff details along with password",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update userstaff details along with password",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/staffDetails"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchClientDepartment": {
            "post": {
                "summary": "Get client department list",
                "description": "Get client department list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get client department list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchMasterDeptReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getClientDeptList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateClientDepartment": {
            "post": {
                "summary": "Update client department ",
                "description": "Update client department ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update client department ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateClientDept"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getClientDeptList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchDetailsByClientDepartment": {
            "post": {
                "summary": "Fetch details by client department ",
                "description": "Fetch details by client department ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch details by client department ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/masterDeptId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getDetailByClientDept"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchActiveParent": {
            "post": {
                "summary": "Fetch active parent department ",
                "description": "Fetch active parent department ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch active  parent department ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchActiveParent"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchActiveParentResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchAllActiveUsers": {
            "post": {
                "summary": "Fetch all active users ",
                "tags": [
                    "User"
                ],
                "description": "Fetch all active users ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch all active users ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchActiveUsersResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/adminstuffsearch": {
            "post": {
                "summary": "Search admin staff by Filter ",
                "description": "Search admin staff by Filter ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Search admin staff by Filter ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/adstaffsearchfrom"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getadstaffsearch"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/userpasswordreset": {
            "post": {
                "summary": "Reset password from admin staff list on selecting reset option in action column ",
                "description": "Reset password from admin staff list on selecting reset option in action column ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Reset password from admin staff list on selecting reset option in action column ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/userpasswordreset"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchadminstafflist": {
            "post": {
                "summary": "List of admin staff/search by name,email,phone/sort by asc desc                ",
                "description": "List of admin staff/search by name,email,phone/sort by asc desc                ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of admin staff/search by name,email,phone/sort by asc desc",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchAdminListBySearch"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/adminListSearchResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/exportadminstaff": {
            "post": {
                "summary": "Export in adminstaff listing for download n excel file",
                "description": "Export in adminstaff listing for download n excel file",
                "authorization": "Yes",
                "tags": [
                    "File"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "export in adminstaff listing for download n excel file",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchAdminListBySearch"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/adminStaffExportResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchClientDepartmentDetailsByParentid": {
            "post": {
                "summary": "Get list of client dept. by parent id",
                "description": "Get list of client dept. by parent id",
                "authorization": "Yes",
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get list of client dept. by parent id",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/masterDeptId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/clientDeptByParentId"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/clientdepartmentstatusupdate": {
            "post": {
                "summary": "Client dept status update",
                "description": "Client dept status update",
                "authorization": "Yes",
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Client dept status update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/clientDeptStatusUpdate"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getcountrylist": {
            "post": {
                "summary": "Listing of all country ",
                "description": "Listing of all country ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Listing of all country ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/auth"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/countryList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getstatelistofselectedcountry": {
            "post": {
                "summary": "Listing of all states of selected country ",
                "description": "Listing of all states of selected country ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Listing of all states of selected country ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/countryId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/stateList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getlookuplistbylookuptype": {
            "post": {
                "summary": "Listing of various types of option with required item ",
                "description": "Listing of various types of option with required item ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Listing of various types of option with required item ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/lookUpReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/lookUpResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchdocumentlist": {
            "post": {
                "summary": "Listing the details of document ",
                "description": "Listing the details of document ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Listing the details of document ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/documentListReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/documentListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/deletedocument": {
            "post": {
                "summary": "Delete document ",
                "description": "Delete document ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Delete document ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/docId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchdocumentdetails": {
            "post": {
                "summary": "Details of a document ",
                "description": "Details of a document ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of a document ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/docId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/docDetails"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updatedocumentdetails": {
            "post": {
                "summary": "Update details of a document ",
                "description": "Update details of a document ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update details of a document ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateDocReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/adddocument": {
            "post": {
                "summary": "Add details of a document ",
                "description": "Add details of a document ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add details of a document ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateDocReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchintentuserlist": {
            "post": {
                "summary": "Get list of intend user ",
                "description": "Get list of intend user ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Document"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get list of intend user ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/reqTypeId"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/intendUserResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/insertService": {
            "post": {
                "summary": "Insert new srevice ",
                "description": "Insert new srevice",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Service"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Insert new srevice ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertServiceReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/insertServiceResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchServiceList": {
            "post": {
                "summary": "Listing of all srevice ",
                "description": "Listing of all srevice ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Service"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Listing of all srevice ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/listServiceReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/listServiceResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchServiceDetails": {
            "post": {
                "summary": "Details of  srevice ",
                "description": "Details of  srevice ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Service"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of  srevice ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/detailServiceReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/detailServiceResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateService": {
            "post": {
                "summary": "Update of  srevice ",
                "description": "Update of  srevice ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Service"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update of  srevice ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateServiceReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/changeStatusService": {
            "post": {
                "summary": "Update status of  srevice ",
                "description": "Update satus of  srevice ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Service"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update status of  srevice ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateServiceStatusReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/insertTrainingCourse": {
            "post": {
                "summary": "Insert taining courses ",
                "description": "Insert taining courses ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Insert taining courses ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/insertTrainingReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/insertTrainingResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchTrainingCourseList": {
            "post": {
                "summary": "Fetch taining courses ",
                "description": "Fetch taining courses ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch taining courses ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchTrainingReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchTrainingResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/changeStatusTrainingCourse": {
            "post": {
                "summary": "Change status taining courses ",
                "description": "Change status taining courses ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Change status taining courses ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/updateServiceStatusReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/updateTrainingStatusResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/publishTrainingCourse": {
            "post": {
                "summary": "Publish taining courses ",
                "description": "Publish taining courses ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Publish taining courses ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/publishTrainingCourseReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/updateTrainingStatusResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchTrainingCourseDetails": {
            "post": {
                "summary": "Fetch training courses details ",
                "description": "Fetch training courses details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch taining courses details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/publishTrainingCourseReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchTrainingCourseResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateTrainingCourse": {
            "post": {
                "summary": "Update training courses details ",
                "description": "Update training courses details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update training courses details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchTrainingCourseResp"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/updateTrainingStatusResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchvendorsignuprequestli": {
            "post": {
                "summary": "Update training courses details ",
                "description": "Update training courses details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update training courses details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchVendorSignUpReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchVendorSignUpResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyvendorstatus": {
            "post": {
                "summary": "Modify vendor status ",
                "description": "Modify vendor status",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify vendor status ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/modifyVendorStatusReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchvendorreqdetails": {
            "post": {
                "summary": "Fetch vendor details ",
                "description": "Fetch vendor details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch vendor details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchVendorDetailReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchVendorDetailResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/deletevendorAcccount": {
            "post": {
                "summary": "Delete vendor account ",
                "description": "Delete vendor account",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Delete vendor account ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchVendorDetailReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createvendoraccount": {
            "post": {
                "summary": "Create vendor account ",
                "description": "Create vendor account",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create vendor account ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/createVendorAccReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/createVendorAccResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/vendoraccountinfo": {
            "post": {
                "summary": "Get vendor account information ",
                "description": "Get vendor account information ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor account information ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/fetchVendorDetailReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vendorAccountResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyvendoraccount": {
            "post": {
                "summary": "Update vendor account  ",
                "description": "Update vendor account  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update vendor account  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/vendorAccountResp"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/exportvendorlist": {
            "post": {
                "summary": "Export vendor list in excel format ",
                "description": "Export vendor list in excel format ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Export vendor list in excel format ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/exportVendorReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/exportVendorResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchclientlist": {
            "post": {
                "summary": "Get client list ",
                "description": "Get client list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get client list ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/clientListReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/clientListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createclientaccount": {
            "post": {
                "summary": "Create client account ",
                "description": "Create client account ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create client account ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/clientAccCreateReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/clientAccCreateResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyclientstatus": {
            "post": {
                "summary": "Modify client status ",
                "description": "Modify client status ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify client status ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/modifyClientStatusReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchtimezonelist": {
            "post": {
                "summary": "Fetch timezone list ",
                "description": "Fetch timezone list ",
                "authorization": "No",
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch timezone list ",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/timezoneListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchclientinfo": {
            "post": {
                "summary": "Fetch client info for editing purpose",
                "description": "Fetch client info for editing purpose",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch client info for editing purpose",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Details": {
                                    "type": "object",
                                    "$ref": "#/definitions/clientAccCreateReq"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/clientInfoResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getallclinetinfo": {
            "post": {
                "summary": "Get client info for creating client contact",
                "description": "Fetch client info for creating client contact",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch client info for creating client contact",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAllClientInfoResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyclientinfo": {
            "post": {
                "summary": "Update clientdetails from client listing",
                "description": "Update clientdetails from client listing",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update clientdetails from client listing",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/modifyClientInfoReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getlanguagelist": {
            "post": {
                "summary": "Update clientdetails from client listing",
                "description": "Update clientdetails from client listing",
                "authorization": "No",
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update clientdetails from client listing",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/languageListReq"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchclientcontactreqlist": {
            "post": {
                "summary": "Fetch client contacts request listing ",
                "description": "Fetch client contacts request listing ",
                "authorization": "No",
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch client contacts request listing ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/fetchClientContactReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchClientContactResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyclientcontactstatus": {
            "post": {
                "summary": "Modify client contacts status ",
                "description": "Modify client contacts status ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify client contacts status ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/updtClientContacStatustReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorAddress": {
            "post": {
                "summary": "Get vendor address ",
                "description": "Get vendor address ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor address ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vendorAddressResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorPayment": {
            "post": {
                "summary": "Get vendor payment ",
                "description": "Get vendor payment ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor payment ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vendorPaymentResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateVendorPayment": {
            "post": {
                "summary": "Update vendor payment ",
                "description": "Update vendor payment ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update vendor payment ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/vendorPaymentResp"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateVendorAddress": {
            "post": {
                "summary": "Update vendor address ",
                "description": "Update vendor address ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update vendor address ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/updateVendorAddressReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchselectedclientdeptinfo": {
            "post": {
                "summary": "Fetch selected client dept info",
                "description": "Fetch selected client dept info ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch selected client dept info ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getClientId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/selectedClientInfoResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchapprovedclientcontactlist": {
            "post": {
                "summary": "Fetch approved client contact list ",
                "description": "Fetch approved client contact list  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch approved client contact list  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/approvedClientContactReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/approvedClientContactResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyapprovedclientcontactstatus": {
            "post": {
                "summary": "Modify approved client contact status ",
                "description": "Modify approved client contact status  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify approved client contact status  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/updtApprvClientContactStatusReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getapprovedclientcontactdetails": {
            "post": {
                "summary": "Get approved client contact details ",
                "description": "Get approved client contact details  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get approved client contact details  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getClientContactId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/clientContactDetailResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchVendorService": {
            "post": {
                "summary": "Fetch vendor service list ",
                "description": "Fetch vendor service list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch vendor service list ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vendorServiceListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyVendorService": {
            "post": {
                "summary": "Modify vendor service  ",
                "description": "Modify vendor service  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify vendor service  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/modifyvendordocumentstatus": {
            "post": {
                "summary": "Modify vendor document  ",
                "description": "Modify vendor document  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Modify vendor document  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/modifyVendorDocReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorContractList": {
            "post": {
                "summary": "Get vendor contract  ",
                "description": "Get vendor contract  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor contract  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorContractList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorTrainingList": {
            "post": {
                "summary": "Get vendor training list  ",
                "description": "Get vendor training list   ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vendor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor training list   ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getVendorId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorTrainingList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/addclientcontacttyperequester": {
            "post": {
                "summary": "Add client contact type requestor ",
                "description": "Add client contact type requestor ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add client contact type requestor ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/addClientContactTypeReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/addclientcontacttypesupervisor": {
            "post": {
                "summary": "Add client contact type suervisor ",
                "description": "Add client contact type suervisor ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add client contact type suervisor ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/addClientContactTypeReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/addclientcontacttypelei": {
            "post": {
                "summary": "Add client contact type LEI ",
                "description": "Add client contact type LEI ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add client contact type LEI ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/addClientContactTypeLEIReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateClientContactDetails": {
            "post": {
                "summary": "Update client contact details ",
                "description": "Update client contact details ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update client contact details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/updateClientContactDetReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateUserProfilePic": {
            "post": {
                "summary": "Update user profile picture ",
                "description": "Update user profile picture ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "SharedAPI"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update user profile picture ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/updateUserProfilePic"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/fetchLeiByClient": {
            "post": {
                "summary": "Fetch LEI client ",
                "description": "Fetch LEI client ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch LEI client ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/fetchActiveParent"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getLeiDetails"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createInterPretationJobFromAdmin": {
            "post": {
                "summary": "Create interpretation job from admin ",
                "description": "Create interpretation job from admin ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create interpretation job from admin ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/createJobRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createQuote": {
            "post": {
                "summary": "Create Quote ",
                "description": "Create Quote ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Quote ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/createQuoteRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/cancelJobDetails": {
            "post": {
                "summary": "Cancel Job Details ",
                "description": "Cancel Job Details ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cancel Job Details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/cancelJobDetails"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getApprovedInterpretationRFQList": {
            "post": {
                "summary": "Get approved interpretation RFQ list ",
                "description": "Get approved interpretation RFQ list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get approved interpretation RFQ list ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getApprvdInterpretationRfq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apprvdInterpretationRfqResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getCompleteInterpretationRFQList": {
            "post": {
                "summary": "Get complete interpretation RFQ list ",
                "description": "Get complete interpretation RFQ list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get complete interpretation RFQ list ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/getApprvdInterpretationRfq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apprvdInterpretationRfqResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getJobDetails": {
            "post": {
                "summary": "Get job details ",
                "description": "Get job details  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get job details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/jobRequestId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/jobDetailsResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createTranslation": {
            "post": {
                "summary": "Create Translation project ",
                "description": "Create Translation project ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Translation project ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/createTranslationReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/jobDetailsResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/createTraining": {
            "post": {
                "summary": "Create Training project ",
                "description": "Create Training project ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Training project ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/createTrainingReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/addBidRequest": {
            "post": {
                "summary": "Add bid request ",
                "description": "Add bid request  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add bid request  ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/addBidReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getAllLeiList": {
            "post": {
                "summary": "Get all LEI list ",
                "description": "Get all LEI list  ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get all LEI list",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/allLeiListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getInterpretionJobStatuslist": {
            "post": {
                "summary": "Get interpretation job status list ",
                "description": "Get interpretation job status list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get interpretation job status list ",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/interpretationStatusListResp"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/sentOfferToVendor": {
            "post": {
                "summary": "For sending offer to vendor from accepted quote of projects",
                "description": "For sending offer to vendor from accepted quote of projects",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "For sending offer to vendor from accepted quote of projects",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/addBidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getAllVendorList": {
            "post": {
                "summary": "Get all vendor list",
                "description": "Get all vendor list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get all vendor list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/jobRequestId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/allVendorList"
                        }
                    },
                    "101": {
                        "description": "Invalid Email",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    },
                    "102": {
                        "description": "Invalid Password",
                        "schema": {
                            "$ref": "#/definitions/invalidError"
                        }
                    }
                }
            }
        },
        "/api/v1/getAllProjects": {
            "post": {
                "summary": "Get all project list",
                "description": "Get all project list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get all project list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getProjectListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getProjectListResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getAllProjectsHistory": {
            "post": {
                "summary": "Get all project list",
                "description": "Get all project list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get all project list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getProjectListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getProjectListResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getPendingInterpretationRFQList": {
            "post": {
                "summary": "Get pending interpretation RFQ list",
                "description": "Get pending interpretation RFQ list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get pending interpretation RFQ list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getProjectListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPendingIntrprtRfqList"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getPendingTranslationRFQList": {
            "post": {
                "summary": "Get pending translation RFQ list",
                "description": "Get pending translation RFQ list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get pending translation RFQ list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getProjectListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPendingTranslatnRfqList"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getPendingTrainingRFQList": {
            "post": {
                "summary": "Get pending training RFQ list",
                "description": "Get pending training RFQ list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get pending training RFQ list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getProjectListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getPendingTraingnRfqList"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getCourseWithCategory": {
            "post": {
                "summary": "Get course with catagory",
                "description": "Get course with catagory",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get course with catagory",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getCourseWithCatReq"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/addRole": {
            "post": {
                "summary": "Add new role",
                "description": "Add new role",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add new role",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/addRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getModuleList": {
            "post": {
                "summary": "Get module list",
                "description": "Get module list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Training Courses"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get module list",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getModuleListResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateRole": {
            "post": {
                "summary": "Update role",
                "description": "Update role ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update role ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/updateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getRoleDetails": {
            "post": {
                "summary": "Get role details",
                "description": "Get role details ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get role details ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getRoleDetailReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/updateRoleReq"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getRoleList": {
            "post": {
                "summary": "Get role list",
                "description": "Get role list ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get role list ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getRoleListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getRoleListResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/deleteRole": {
            "post": {
                "summary": "Delete a role ",
                "description": "Delete a role ",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Delete a role ",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/deleteRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getUserListByUserType": {
            "post": {
                "summary": "get user list by user type for notification",
                "description": "get user list by user type for notification",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "get user list by user type for notification",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/userTypeIdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/userTypeResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/createNotification": {
            "post": {
                "summary": "create notification from admin",
                "description": "create notification from admin",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "create notification from admin",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/createNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getNotificationList": {
            "post": {
                "summary": "get listing of notifications",
                "description": "get listing of notifications",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "get listing of notifications",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getNotificationListReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getNotificationListResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/deleteNotification": {
            "post": {
                "summary": "delete notifications",
                "description": "delete notifications",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "delete notifications",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/notificationId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getNotificationDetails": {
            "post": {
                "summary": "get notification details",
                "description": "get notification details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "get notification details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/notificationId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/notificationDetailsResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateNotificationDetails": {
            "post": {
                "summary": "update notification details",
                "description": "update notification details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "update notification details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/updateNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateConfigurationDetails": {
            "post": {
                "summary": "Updae vendor configurations",
                "description": "Updae vendor configurations",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updae vendor configurations",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/updateCongDetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/deleteVendorRatecard": {
            "post": {
                "summary": "Delete vendor rate card",
                "description": "Delete vendor rate card",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Delete vendor rate card",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/deleteVendorRateCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorRatecardList": {
            "post": {
                "summary": "Get vendor rate card list",
                "description": "Get vendor rate card list",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor rate card list",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getVendorRateCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorRateCardResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getRatecardByLanguage": {
            "post": {
                "summary": "Get rate card by language",
                "description": "Get rate card by language",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get rate card by language",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getRateCardByLang"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getRateCardByLangResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/createQuoteTranslation": {
            "post": {
                "summary": "Creae quote for translation project",
                "description": "Creae quote for translation project",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creae quote for translation project",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/createQuoteTransReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getNotificationConfig": {
            "post": {
                "summary": "Get all notification settings",
                "description": "Get all notification settings",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get all notification settings",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getNotificationConf"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/updateNotificationConfig": {
            "post": {
                "summary": "Update all notification settings",
                "description": "Update all notification settings",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update all notification settings",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/updateNoficationConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorsWorkingStatus": {
            "post": {
                "summary": "Get vendor list after acpted of quote by client for interpretation",
                "description": "Get vendor list after acpted of quote by client for interpretation",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor list after acpted of quote by client for interpretation",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getVendorWorkStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorWorkStatusResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/getVendorsWorkingStatusTraining": {
            "post": {
                "summary": "Get vendor list after accepted of quote by client for training",
                "description": "Get vendor list after accepted of quote by client for training",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor list after accepted of quote by client for training",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getVendorWorkStatusTranReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorWorkStatusResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//fetchActiveClientDepartment": {
            "post": {
                "summary": "Fetch active client department",
                "description": "Fetch active client department",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fetch active client department",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/fetchActiveClientDeptReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fetchActiveClientDeptResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//getSupervisorFromClient": {
            "post": {
                "summary": "get supervisorlist of any client",
                "description": "get supervisorlist of any client",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "get supervisorlist of any client",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/fetchActiveParent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getSupervisorFromClientResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//fetchActiveMasterDepartmentByIndustry": {
            "post": {
                "summary": "Get active master department list by industry type",
                "description": "Get active master department list by industry type",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get active master department list by industry type",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/industryTypeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/activeMasterDept"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//getVendorRatecardListForVendorWeb": {
            "post": {
                "summary": "Get vendor rate card list for vendorWeb",
                "description": "Get vendor rate card list for vendorWeb",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Get vendor rate card list for vendorWeb",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getVendorRatecardListForVendorWebReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorRatecardListForVendorWebResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//getVendorsWorkingStatus": {
            "post": {
                "summary": "Vendor list for interpretation job offer sent with accept status",
                "description": "Vendor list for interpretation job offer sent with accept status",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Vendor list for interpretation job offer sent with accept status",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/getVendorsWorkingStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorsWorkingStatusResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//getVendorsWorkingDetails": {
            "post": {
                "summary": "Vendor list working details",
                "description": "Vendor list working details",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Vendor list working details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/vendorIdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getVendorsWorkingDetailsResp"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//addVendorRatecardNew": {
            "post": {
                "summary": "Add vendor rate card for multiple languages",
                "description": "Add vendor rate card for multiple languages",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add vendor rate card for multiple languages",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/addVendorRateCardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//addVendorRatecard": {
            "post": {
                "summary": "Add vendor rate card ",
                "description": "Add vendor rate card",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add vendor rate card",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/addVendorRateCardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1//acceptClientQuote": {
            "post": {
                "summary": "Accept job quotation on behalf of client",
                "description": "Accept job quotation on behalf of client",
                "authorization": "Yes",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "VendorWeb"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Accept job quotation on behalf of client",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/acceptClientQuoteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "acceptClientQuoteReq":{
            "type":"object",
            "properties":{
                "requestedId":{
                    "type":"integer"
                },
                "clientId":{
                    "type":"string"
                }
            }
        },
        "addVendorRateCardReq":{
            "type":"object",
            "required":[
                "vendorId",
                "sourceLanguage",
                "targetLanguage",
                "rateCardData"
            ],
            "properties":{
                "vendorId":{
                    "type":"string"
                },
                "sourceLanguage":{
                    "type":"string"
                },
                "targetLanguage":{
                    "type":"string"
                },
                "rateCardData":{
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "appointmentType":{
                                "type":"integer"
                            },
                            "industryType":{
                                "type":"string"
                            },
                            "regularRateHour":{
                                "type":"string"
                            },
                            "regularRateHalfDay":{
                                "type":"string"
                            },
                            "regularRateFullDay":{
                                "type":"string"
                            },
                            "minimumDurationRate":{
                                "type":"string"
                            },
                            "minimumDurationUnit":{
                                "type":"string"
                            },
                            "billingIncrementRate":{
                                "type":"integer"
                            },
                            "billingIncrementUnit":{
                                "type":"integer"
                            },
                            "nightWeekendRate":{
                                "type":"integer"
                            },
                            "nightWeekendUnit":{
                                "type":"string"
                            },
                            "mileage":{
                                "type":"integer"
                            },
                            "mileageRate":{
                                "type":"string"
                            },
                            "cancelRate":{
                                "type":"string"
                            },
                            "cancelUnit":{
                                "type":"string"
                            },
                            "rushPolicyRate":{
                                "type":"string"
                            },
                            "rushPolicyUnit":{
                                "type":"string"
                            },
                            "rushFeeRate":{
                                "type":"integer"
                            },
                            "rushFeeUnit":{
                                "type":"string"
                            }
                        }
                    }
                }
            }
        },
        "getVendorsWorkingDetailsResp":{
            "type":"object",
            "required":[
                "workDetails",
                "reqtime"
            ],
            "properties":{
                "workDetails":{
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "scheduleDate":{
                                "type":"string"
                            },
                            "scheduleTime":{
                                "type":"string"
                            },
                            "scheduleDay":{
                                "type":"string"
                            },
                            "duration":{
                                "type":"string"
                            },
                            "expectDeadline":{
                                "type":"string"
                            },
                            "appointmentType":{
                                "type":"string"
                            }
                        }
                    }
                },
                "reqtime":{
                    "type":"integer"
                }
            }
        },
        "vendorIdReq":{
            "type":"object",
            "properties":{
                "vendorid":{
                    "type":"string"
                }
            }
        },
        "getVendorsWorkingStatusResp":{
            "type":"object",
            "required":[
                "vendorList",
                "vendorCount",
                "reqtime"
            ],
            "properties":{
                "vendorList":{
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fName":{
                                "type":"string"
                            },
                            "ratings":{
                                "type":"integer"
                            },
                            "lName":{
                                "type":"string"
                            },
                            "agencyName":{
                                "type":"string"
                            },
                            "email":{
                                "type":"string"
                            },
                            "countryCode":{
                                "type":"string"
                            },
                            "mobile":{
                                "type":"string"
                            },
                            "userId":{
                                "type":"string"
                            },
                            "isQuoteSent":{
                                "type":"integer"
                            },
                            "status":{
                                "type":"integer"
                            },
                            "budget":{
                                "type":"integer"
                            },
                            "bidFee":{
                                "type":"integer"
                            },
                            "totalBidFee":{
                                "type":"integer"
                            }
                        }
                    }
                },
                "vendorCount":{
                    "type":"integer"
                },
                "reqtime":{
                    "type":"integer"
                }
            }
        },
        "getVendorsWorkingStatusReq":{
            "type":"object",
            "properties":{
                "requestId":{
                    "type":"integer"
                },
                "targetLanguageId":{
                    "type":"integer"
                },
                "offset":{
                    "type":"string"
                },
                "limit":{
                    "type":"string"
                },
                "orderby":{
                    "type":"string"
                },
                "direc":{
                    "type":"string"
                },
                "searchvalue":{
                    "type":"string"
                }
            }
        },
        "getVendorRatecardListForVendorWebResp":{
            "type":"object",
            "properties":{
                "ratecardInfo":{
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "id":{
                                "type":"integer"
                            },
                            "sourceLanguage":{
                                "type":"string"
                            },
                            "targetLanguage":{
                                "type":"string"
                            },
                            "sourceLanguageId":{
                                "type":"integer"
                            },
                            "targetLanguageId":{
                                "type":"integer"
                            },
                            "ServiceType":{
                                "type":"string"
                            },
                            "appointmentType":{
                                "type":"string"
                            },
                            "industryType":{
                                "type":"string"
                            },
                            "regularRateHour":{
                                "type":"integer"
                            },
                            "regularRateHalfDay":{
                                "type":"integer"
                            },
                            "regularRateFullDay":{
                                "type":"integer"
                            },
                            "minimumDurationRate":{
                                "type":"integer"
                            },
                            "minimumDurationUnit":{
                                "type":"string"
                            },
                            "billingIncrementRate":{
                                "type":"integer"
                            },
                            "billingIncrementUnit":{
                                "type":"string"
                            },
                            "nightWeekendRate":{
                                "type":"integer"
                            },
                            "nightWeekendUnit":{
                                "type":"string"
                            },
                            "mileageRate":{
                                "type":"integer"
                            },
                            "cancelRate":{
                                "type":"integer"
                            },
                            "cancelUnit":{
                                "type":"string"
                            },
                            "rushPolicyRate":{
                                "type":"integer"
                            },
                            "rushPolicyUnit":{
                                "type":"string"
                            },
                            "rushFeeRate":{
                                "type":"integer"
                            },
                            "rushFeeUnit":{
                                "type":"string"
                            }
                        }
                    },
                    "total":{
                        "type":"integer"
                    },
                    "reqtime":{
                        "type":"integer"
                    }
                }
            }
        },
        "getVendorRatecardListForVendorWebReq":{
            "type":"object",
            "properties":{
                "vendorId":{
                    "type":"string"
                },
                "serviceId":{
                    "type":"integer"
                },
                "industryTypeId":{
                    "type":"string"
                },
                "appointmentTypeId":{
                    "type":"string"
                }
            }
        },
        "industryTypeReq":{
            "type":"object",
            "properties":{
                "industryType":{
                    "type":"integer"
                }
            }
        },
        "getSupervisorFromClientResp":{
            "type":"object",
            "properties":{
                "supervisorList":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "reqtime":{
                    "type":"integer"
                }
            }
        },
        "fetchActiveClientDeptResp":{
            "type":"array",
            "items":{
                "type":"object",
                "properties":{
                    "id":{
                        "type":"integer"
                    },
                    "department":{
                        "type":"string"
                    }
                }
            }
        },
        "fetchActiveClientDeptReq":{
            "type":"object",
            "properties":{
                "clientId":{
                    "type":"string"
                },
                "iat":{
                    "type":"integer"
                }
            }
        },
        "getVendorWorkStatusTranReq":{
            "type":"object",
            "properties":{
                "requestId":{
                    "type":"integer"
                }
            }
        },
        "getVendorWorkStatusResp":{
            "type":"object",
            "required":[
                "vendorList",
                "reqtime"
            ],
            "properties":{
                "vendorList":{
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fName":{
                                "type":"string"
                            },
                            "lName":{
                                "type":"string"
                            },
                            "agencyName":{
                                "type":"string"
                            },
                            "email":{
                                "type":"string"
                            },
                            "countryCode":{
                                "type":"string"
                            },
                            "mobile":{
                                "type":"string"
                            },
                            "userId":{
                                "type":"string"
                            },
                            "isQuoteSent":{
                                "type":"integer"
                            },
                            "status":{
                                "type":"integer"
                            }
                        }
                    }
                },
                "reqtime":{
                    "type":"integer"
                }
            }
        },
        "getVendorWorkStatusReq":{
            "type":"object",
            "properties":{
                "requestId":{
                    "type":"integer"
                },
                "targetLanguage":{
                    "type":"string"
                }
            }
        },
        "updateNoficationConf": {
            "type": "object",
            "properties": {
                "notifiationConfig": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "interpreter": {
                                "type": "string"
                            },
                            "translator": {
                                "type": "string"
                            },
                            "trainer": {
                                "type": "string"
                            },
                            "clientAdmin": {
                                "type": "string"
                            },
                            "requestor": {
                                "type": "string"
                            },
                            "supervisor": {
                                "type": "string"
                            },
                            "admin": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "getNotificationConf": {
            "type": "array",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "rowName": {
                    "type": "string"
                },
                "interpreter": {
                    "type": "integer"
                },
                "translator": {
                    "type": "integer"
                },
                "trainer": {
                    "type": "integer"
                },
                "clientAdmin": {
                    "type": "integer"
                },
                "requestor": {
                    "type": "integer"
                },
                "supervisor": {
                    "type": "integer"
                },
                "admin": {
                    "type": "integer"
                },
                "createDate": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "createQuoteTransReq": {
            "type": "object",
            "required": [
                "requestId",
                "total",
                "taskDetails"
            ],
            "properties": {
                "requestId": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "taskDetails": {
                    "type": "array",
                    "properties": {
                        "taskId": {
                            "type": "integer"
                        },
                        "service": {
                            "type": "string"
                        },
                        "sourceLanguage": {
                            "type": "string"
                        },
                        "targetLanguage": {
                            "type": "string"
                        },
                        "wordCountQty": {
                            "type": "integer"
                        },
                        "wordCountCost": {
                            "type": "integer"
                        },
                        "wordCountRate": {
                            "type": "integer"
                        },
                        "dtpQty": {
                            "type": "integer"
                        },
                        "dtpCost": {
                            "type": "integer"
                        },
                        "dtpRate": {
                            "type": "integer"
                        },
                        "rushFeeUnit": {
                            "type": "integer"
                        },
                        "rushFeeCost": {
                            "type": "integer"
                        },
                        "rushFeeRate": {
                            "type": "integer"
                        },
                        "SubCost": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "getRateCardByLangResp": {
            "type": "object",
            "required": [
                "ratecardInfo",
                "reqtime"
            ],
            "ratecardInfo": {
                "type": "object",
                "required": [
                    "sourceLanguage",
                    "targetLanguage",
                    "rateCardData"
                ],
                "sourceLanguage": {
                    "type": "string"
                },
                "targetLanguage": {
                    "type": "string"
                },
                "rateCardData": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "appointmentType": {
                                "type": "string"
                            },
                            "industryType": {
                                "type": "string"
                            },
                            "regularRateHour": {
                                "type": "integer"
                            },
                            "regularRateHalfDay": {
                                "type": "integer"
                            },
                            "regularRateFullDay": {
                                "type": "integer"
                            },
                            "minimumDurationRate": {
                                "type": "integer"
                            },
                            "minimumDurationUnit": {
                                "type": "string"
                            },
                            "billingIncrementRate": {
                                "type": "integer"
                            },
                            "billingIncrementUnit": {
                                "type": "string"
                            },
                            "nightWeekendRate": {
                                "type": "integer"
                            },
                            "nightWeekendUnit": {
                                "type": "string"
                            },
                            "mileageRate": {
                                "type": "integer"
                            },
                            "cancelRate": {
                                "type": "integer"
                            },
                            "cancelUnit": {
                                "type": "string"
                            },
                            "rushPolicyRate": {
                                "type": "integer"
                            },
                            "rushPolicyUnit": {
                                "type": "string"
                            },
                            "rushFeeRate": {
                                "type": "integer"
                            },
                            "rushFeeUnit": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "reqtime": {
                "type": "integer"
            }
        },
        "getRateCardByLang": {
            "type": "object",
            "properties": {
                "vendorid": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "integer"
                },
                "sourceLanguage": {
                    "type": "string"
                },
                "targetLanguage": {
                    "type": "string"
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "getVendorRateCardResp": {
            "type": "object",
            "required": [
                "ratecardInfo",
                "total",
                "reqtime"
            ],
            "properties": {
                "ratecardInfo": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            },
                            "targetLanguage": {
                                "type": "string"
                            },
                            "sourceLanguageId": {
                                "type": "integer"
                            },
                            "targetLanguageId": {
                                "type": "integer"
                            },
                            "ServiceType": {
                                "type": "string"
                            },
                            "appointmentType": {
                                "type": "string"
                            },
                            "industryType": {
                                "type": "string"
                            },
                            "regularRateHour": {
                                "type": "integer"
                            },
                            "regularRateHalfDay": {
                                "type": "integer"
                            },
                            "regularRateFullDay": {
                                "type": "integer"
                            },
                            "minimumDurationRate": {
                                "type": "integer"
                            },
                            "minimumDurationUnit": {
                                "type": "string"
                            },
                            "billingIncrementRate": {
                                "type": "integer"
                            },
                            "billingIncrementUnit": {
                                "type": "string"
                            },
                            "nightWeekendRate": {
                                "type": "integer"
                            },
                            "nightWeekendUnit": {
                                "type": "string"
                            },
                            "mileageRate": {
                                "type": "integer"
                            },
                            "cancelRate": {
                                "type": "integer"
                            },
                            "cancelUnit": {
                                "type": "string"
                            },
                            "rushPolicyRate": {
                                "type": "integer"
                            },
                            "rushPolicyUnit": {
                                "type": "string"
                            },
                            "rushFeeRate": {
                                "type": "integer"
                            },
                            "rushFeeUnit": {
                                "type": "string"
                            }
                        }
                    }
                },
                "total": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getVendorRateCard": {
            "type": "object",
            "properties": {
                "vendorid": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "deleteVendorRateCard": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "updateCongDetReq": {
            "type": "object",
            "properties": {
                "autoBroadcast": {
                    "type": "string"
                },
                "autoConfirm": {
                    "type": "string"
                },
                "noOfInterpreter": {
                    "type": "string"
                },
                "notifyTimeBeforeJob": {
                    "type": "string"
                },
                "notifyTimeUnit": {
                    "type": "string"
                },
                "radius": {
                    "type": "string"
                },
                "criteria": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "updateNotification": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "notificationType": {
                    "type": "string"
                },
                "recipientType": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "body": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "notificationId": {
                    "type": "integer"
                }
            }
        },
        "notificationDetailsResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "userTypeId": {
                    "type": "integer"
                },
                "notificationType": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "scheduledDate": {
                    "type": "string"
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "isSent": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "notificationId": {
            "type": "object",
            "properties": {
                "notificationId": {
                    "type": "integer"
                }
            }
        },
        "getNotificationListReq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchto": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userTypeId": {
                    "type": "string"
                },
                "searchVal": {
                    "type": "string"
                }
            }
        },
        "getNotificationListResp": {
            "type": "object",
            "required": [
                "notificationCount",
                "notificationList",
                "reqtime"
            ],
            "properties": {
                "notificationCount": {
                    "type": "integer"
                },
                "notificationList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "notificationType": {
                                "type": "integer"
                            },
                            "title": {
                                "type": "string"
                            },
                            "body": {
                                "type": "string"
                            },
                            "isSent": {
                                "type": "integer"
                            },
                            "endDate": {
                                "type": "string"
                            },
                            "scheduledDate": {
                                "type": "string"
                            },
                            "recipientType": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "createNotification": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "notificationType": {
                    "type": "string"
                },
                "recipientType": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "body": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                }
            }
        },
        "userTypeResp": {
            "type": "object",
            "required": [
                "userList",
                "reqtime"
            ],
            "userList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "userId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            },
            "reqtime": {
                "type": "integer"
            }
        },
        "userTypeIdReq": {
            "type": "object",
            "properties": {
                "reqUserTypeId": {
                    "type": "integer"
                }
            }
        },
        "deleteRoleReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "getRoleListResp": {
            "type": "object",
            "required": [
                "details",
                "count",
                "reqtime"
            ],
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "roleName": {
                                "type": "string"
                            },
                            "userType": {
                                "type": "string"
                            }
                        }
                    }
                },
                "count": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getRoleListReq": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "getRoleDetailReq": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "updateRoleReq": {
            "type": "object",
            "required": [
                "roleName",
                "roleTypeId",
                "modules",
                "reqtime"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "roleTypeId": {
                    "type": "integer"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "moduleId": {
                                "type": "integer"
                            },
                            "moduleName": {
                                "type": "string"
                            },
                            "permission": {
                                "type": "object",
                                "properties": {
                                    "add": {
                                        "type": "string"
                                    },
                                    "edit": {
                                        "type": "string"
                                    },
                                    "view": {
                                        "type": "string"
                                    },
                                    "delete": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "getModuleListResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                }
            }
        },
        "addRoleReq": {
            "type": "object",
            "required": [
                "roleName",
                "roleTypeId",
                "modules",
                "reqtime"
            ],
            "properties": {
                "roleName": {
                    "type": "string"
                },
                "roleTypeId": {
                    "type": "integer"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "moduleId": {
                                "type": "integer"
                            },
                            "moduleName": {
                                "type": "string"
                            },
                            "permission": {
                                "type": "object",
                                "properties": {
                                    "add": {
                                        "type": "string"
                                    },
                                    "edit": {
                                        "type": "string"
                                    },
                                    "view": {
                                        "type": "string"
                                    },
                                    "delete": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "iat": {
                    "type": "integer"
                }
            }
        },
        "getCourseWithCatReq": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "courses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "formatTypeId": {
                                    "type": "integer"
                                },
                                "duration": {
                                    "type": "integer"
                                },
                                "durationUnit": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "getPendingTraingnRfqList": {
            "type": "object",
            "required": [
                "projectCount",
                "projectList",
                "reqtime"
            ],
            "properties": {
                "projectCount": {
                    "type": "integer"
                },
                "projectList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "requirement": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "format": {
                                "type": "string"
                            },
                            "scheduleDate": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getPendingTranslatnRfqList": {
            "type": "object",
            "required": [
                "projectCount",
                "projectList",
                "reqtime"
            ],
            "properties": {
                "projectCount": {
                    "type": "integer"
                },
                "projectList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "targetLanguage": {
                                "type": "string"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            },
                            "expectedDeadline": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getPendingIntrprtRfqList": {
            "type": "object",
            "required": [
                "projectCount",
                "projectList",
                "reqtime"
            ],
            "properties": {
                "projectCount": {
                    "type": "integer"
                },
                "projectList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "date": {
                                "type": "string"
                            },
                            "time": {
                                "type": "string"
                            },
                            "targetLanguage": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            },
                            "leiName": {
                                "type": "string"
                            },
                            "appointmenttype": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "getProjectListResp": {
            "type": "object",
            "required": [
                "projectCount",
                "projectList",
                "reqtime"
            ],
            "properties": {
                "projectCount": {
                    "type": "integer"
                },
                "projectList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "date": {
                                "type": "string"
                            },
                            "time": {
                                "type": "string"
                            },
                            "trainingCategory": {
                                "type": "string"
                            },
                            "targetAudience": {
                                "type": "string"
                            },
                            "serviceTypeId": {
                                "type": "integer"
                            },
                            "naminService": {
                                "type": "string"
                            },
                            "language": {
                                "type": "string"
                            },
                            "servicename": {
                                "type": "string"
                            },
                            "statusName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getProjectListReq": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "iat": {
                    "type": "integer"
                },
                "limit": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                },
                "orderby": {
                    "type": "string"
                },
                "rfqid": {
                    "type": "string"
                },
                "searchFrom": {
                    "type": "string"
                },
                "searchTo": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "allVendorList": {
            "type": "object",
            "required": [
                "vendorList",
                "reqtime"
            ],
            "properties": {
                "vendorList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fName": {
                                "type": "string"
                            },
                            "lName": {
                                "type": "string"
                            },
                            "vendorTypeId": {
                                "type": "integer"
                            },
                            "agencyName": {
                                "type": "string"
                            },
                            "ratings": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "userId": {
                                "type": "string"
                            },
                            "isQuoteSent": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "interpretationStatusListResp": {
            "type": "object",
            "required": [
                "statusList",
                "reqtime"
            ],
            "properties": {
                "statusList": {
                    "type": "object",
                    "properties": {
                        "PENDING": {
                            "type": "string"
                        },
                        "QUOTE_SEND": {
                            "type": "string"
                        },
                        "QUOTE_ACCEPTED": {
                            "type": "string"
                        },
                        "OFFER_SENT": {
                            "type": "string"
                        },
                        "OFFER_ACCEPTED": {
                            "type": "string"
                        },
                        "OFFER_REJECTED": {
                            "type": "string"
                        },
                        "BIDS_RECEIVED": {
                            "type": "string"
                        },
                        "QUOTE_REJECTED": {
                            "type": "string"
                        },
                        "ASSIGNED": {
                            "type": "string"
                        },
                        "IN_PROGRESS": {
                            "type": "string"
                        },
                        "COMPLETED": {
                            "type": "string"
                        },
                        "CANCELLED": {
                            "type": "string"
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "allLeiListResp": {
            "type": "object",
            "required": [
                "leiList",
                "reqtime"
            ],
            "properties": {
                "leiList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "addBidReq": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer"
                },
                "quoteId": {
                    "type": "integer"
                },
                "vendors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "createTrainingReq": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "serviceTypeId": {
                    "type": "integer"
                },
                "trainingCatId": {
                    "type": "integer"
                },
                "courseId": {
                    "type": "integer"
                },
                "noteForAdmin": {
                    "type": "string"
                },
                "trainingFormatId": {
                    "type": "string"
                },
                "scheduleDate": {
                    "type": "string"
                },
                "scheduleTime": {
                    "type": "string"
                },
                "requirement": {
                    "type": "string"
                },
                "noOfParticipants": {
                    "type": "integer"
                },
                "totalDuration": {
                    "type": "string"
                },
                "alertEmail": {
                    "type": "string"
                },
                "budget": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "genderPref": {
                    "type": "string"
                },
                "noteForTrainer": {
                    "type": "string"
                },
                "siteContactNo": {
                    "type": "string"
                },
                "siteContactName": {
                    "type": "string"
                }
            }
        },
        "createTranslationReq": {
            "type": "object",
            "required": [
                "clientId",
                "serviceTypeId",
                "isDtp",
                "targetAudience",
                "expectedDeadline",
                "description",
                "otherData"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "serviceTypeId": {
                    "type": "integer"
                },
                "isDtp": {
                    "type": "integer"
                },
                "targetAudience": {
                    "type": "string"
                },
                "expectedDeadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "otherData": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "serviceTypeId": {
                                "type": "integer"
                            },
                            "sourceLanguageId": {
                                "type": "integer"
                            },
                            "targetLanguageId": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "documentType": {
                                "type": "string"
                            },
                            "documentName": {
                                "type": "string"
                            },
                            "documentPath": {
                                "type": "string"
                            },
                            "notes": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "jobDetailsResp": {
            "type": "object",
            "required": [
                "jobDetails",
                "taskList",
                "clientDetails",
                "quoteInfo",
                "reqtime"
            ],
            "properties": {
                "jobDetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "appointmentType": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "jobTypeId": {
                                "type": "integer"
                            },
                            "scheduleDate": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "siteContact": {
                                "type": "string"
                            },
                            "siteContactPhone": {
                                "type": "string"
                            },
                            "consumer": {
                                "type": "string"
                            },
                            "noteByClient": {
                                "type": "string"
                            },
                            "noteFor7C": {
                                "type": "string"
                            },
                            "requestStatus": {
                                "type": "integer"
                            },
                            "quoteStatus": {
                                "type": "integer"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            }
                        }
                    }
                },
                "taskList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "targetLanguage": {
                                "type": "string"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            },
                            "serviceName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "clientDetails": {
                    "type": "object",
                    "properties": {
                        "clientName": {
                            "type": "string"
                        },
                        "businessEmail": {
                            "type": "string"
                        },
                        "fName": {
                            "type": "string"
                        },
                        "lName": {
                            "type": "string"
                        },
                        "adminCountryCode": {
                            "type": "string"
                        },
                        "adminPhone": {
                            "type": "string"
                        },
                        "isOutOfTown": {
                            "type": "integer"
                        },
                        "industtryType": {
                            "type": "string"
                        }
                    }
                },
                "quoteInfo": {
                    "type": "object",
                    "properties": {
                        "quoteId": {
                            "type": "string"
                        },
                        "rushFee": {
                            "type": "integer"
                        },
                        "fee": {
                            "type": "string"
                        },
                        "additionalFee": {
                            "type": "string"
                        },
                        "total": {
                            "type": "integer"
                        },
                        "approvalStatus": {
                            "type": "integer"
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "jobRequestId": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string"
                }
            }
        },
        "apprvdInterpretationRfqResp": {
            "type": "object",
            "required": [
                "projectCount",
                "projectList",
                "reqtime"
            ],
            "properties": {
                "projectCount": {
                    "type": "integer"
                },
                "projectList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "requestId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "date": {
                                "type": "string"
                            },
                            "time": {
                                "type": "string"
                            },
                            "targetLanguage": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "sourceLanguage": {
                                "type": "string"
                            },
                            "leiName": {
                                "type": "string"
                            },
                            "appointmenttype": {
                                "type": "string"
                            },
                            "statusName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getApprvdInterpretationRfq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchFrom": {
                    "type": "string"
                },
                "searchTo": {
                    "type": "string"
                },
                "rfqId": {
                    "type": "string"
                }
            }
        },
        "cancelJobDetails": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer"
                },
                "selectReason": {
                    "type": "string"
                },
                "isScheduled": {
                    "type": "integer"
                }
            }
        },
        "createQuoteRequest": {
            "type": "object",
            "required": [
                "requestId",
                "fee",
                "total",
                "rushFee",
                "additionalFee"
            ],
            "properties": {
                "requestId": {
                    "type": "string"
                },
                "fee": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "rushFee": {
                    "type": "string"
                },
                "additionalFee": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "amt": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "createJobRequest": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "appointmentType": {
                    "type": "integer"
                },
                "jobType": {
                    "type": "integer"
                },
                "noOfInterpreter": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "sourceLanguage": {
                    "type": "integer"
                },
                "targetLanguage": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "interpreterNote": {
                    "type": "string"
                },
                "appointmentLocation": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "scheduledDate": {
                    "type": "string"
                },
                "scheduledTime": {
                    "type": "string"
                },
                "siteContact": {
                    "type": "string"
                },
                "siteContactMobile": {
                    "type": "string"
                },
                "leiId": {
                    "type": "string"
                },
                "leiDOB": {
                    "type": "string"
                },
                "leiCountryCode": {
                    "type": "integer"
                },
                "leiMobile": {
                    "type": "string"
                },
                "leiEmail": {
                    "type": "string"
                },
                "leiGender": {
                    "type": "string"
                },
                "leiReference": {
                    "type": "string"
                },
                "leiCountry": {
                    "type": "string"
                },
                "leiPreferredLanguage": {
                    "type": "integer"
                },
                "countryDialect": {
                    "type": "string"
                },
                "interpreterCheck": {
                    "type": "string"
                }
            }
        },
        "getLeiDetails": {
            "type": "object",
            "required": [
                "leiList",
                "reqtime"
            ],
            "properties": {
                "leiList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "dob": {
                                "type": "string"
                            },
                            "genderTypeId": {
                                "type": "integer"
                            },
                            "languageId": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "updateUserProfilePic": {
            "type": "object",
            "properties": {
                "selectedUserId": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "updateClientContactDetReq": {
            "type": "object",
            "properties": {
                "clientcontacttype": {
                    "type": "string"
                },
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "altcountrycode": {
                    "type": "string"
                },
                "altmobile": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "referance": {
                    "type": "string"
                },
                "preferedinterpreter": {
                    "type": "string"
                },
                "excludeinterpreter": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profilepic": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "additionalcontactname": {
                    "type": "string"
                },
                "additionalphone": {
                    "type": "string"
                },
                "additionalcountrycode": {
                    "type": "string"
                },
                "additionalemail": {
                    "type": "string"
                },
                "relationship": {
                    "type": "string"
                },
                "emailid": {
                    "type": "string"
                }
            }
        },
        "addClientContactTypeLEIReq": {
            "type": "object",
            "properties": {
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "altcountrycode": {
                    "type": "string"
                },
                "altmobile": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "referance": {
                    "type": "string"
                },
                "preferedinterpreter": {
                    "type": "string"
                },
                "excludeinterpreter": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profilepic": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "additionalcontactname": {
                    "type": "string"
                },
                "additionalphone": {
                    "type": "string"
                },
                "additionalcountrycode": {
                    "type": "string"
                },
                "additionalemail": {
                    "type": "string"
                },
                "relationship": {
                    "type": "string"
                },
                "emailid": {
                    "type": "string"
                }
            }
        },
        "addClientContactTypeReq": {
            "type": "object",
            "properties": {
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                },
                "industrytype": {
                    "type": "string"
                },
                "jobtype": {
                    "type": "string"
                },
                "jobtitle": {
                    "type": "string"
                },
                "department": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "emailid": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profilepic": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "directline": {
                    "type": "string"
                },
                "outoftown": {
                    "type": "integer"
                },
                "amount": {
                    "type": "integer"
                }
            }
        },
        "getVendorTrainingList": {
            "type": "object",
            "required": [
                "traningList",
                "reqtime"
            ],
            "properties": {
                "traningList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "documentName": {
                                "type": "string"
                            },
                            "issuingOrganization": {
                                "type": "string"
                            },
                            "issuingDate": {
                                "type": "string"
                            },
                            "expirationDate": {
                                "type": "string"
                            },
                            "documentPath": {
                                "type": "string"
                            },
                            "requestDate": {
                                "type": "string"
                            },
                            "verificationStatus": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getVendorContractList": {
            "type": "object",
            "required": [
                "contractList",
                "reqtime"
            ],
            "properties": {
                "contractList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "documentName": {
                                "type": "string"
                            },
                            "issuingDate": {
                                "type": "string"
                            },
                            "expirationDate": {
                                "type": "string"
                            },
                            "documentPath": {
                                "type": "string"
                            },
                            "requestDate": {
                                "type": "string"
                            },
                            "verificationStatus": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "modifyVendorDocReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "modifyVendorServiceResp": {
            "type": "object",
            "required": [
                "vendorid",
                "serviceId",
                "languages",
                "service"
            ],
            "properties": {
                "vendorid": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "integer"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "source": {
                                "type": "integer"
                            },
                            "target": {
                                "type": "integer"
                            },
                            "isPrimary": {
                                "type": "integer"
                            },
                            "speak": {
                                "type": "integer"
                            },
                            "read": {
                                "type": "integer"
                            },
                            "write": {
                                "type": "integer"
                            },
                            "rating": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "subItem": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "id",
                                    "subItemName",
                                    "subData"
                                ],
                                "id": {
                                    "type": "integer"
                                },
                                "subItemName": {
                                    "type": "string"
                                },
                                "subData": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "vendorServiceListResp": {
            "type": "object",
            "required": [
                "service",
                "languages",
                "reqtime"
            ],
            "properties": {
                "service": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "serviceid": {
                                "type": "integer"
                            },
                            "details": {
                                "type": "string"
                            }
                        }
                    }
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "serviceId",
                            "info"
                        ],
                        "properties": {
                            "serviceId": {
                                "type": "integer"
                            },
                            "info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "isPrimary": {
                                            "type": "integer"
                                        },
                                        "languageId": {
                                            "type": "integer"
                                        },
                                        "targetLanguageId": {
                                            "type": "integer"
                                        },
                                        "canSpeak": {
                                            "type": "integer"
                                        },
                                        "canRead": {
                                            "type": "integer"
                                        },
                                        "canWrite": {
                                            "type": "integer"
                                        },
                                        "ratings": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "clientContactDetailResp": {
            "type": "object",
            "required": [
                "clientinfo",
                "deptInfo",
                "address",
                "reqtime"
            ],
            "clientinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "integer"
                    },
                    "clientContactTypeId": {
                        "type": "string"
                    },
                    "fName": {
                        "type": "string"
                    },
                    "lName": {
                        "type": "string"
                    },
                    "dob": {
                        "type": "string"
                    },
                    "genderTypeId": {
                        "type": "integer"
                    },
                    "clientId": {
                        "type": "integer"
                    },
                    "industryTypeId": {
                        "type": "integer"
                    },
                    "jobTypeId": {
                        "type": "integer"
                    },
                    "jobTitle": {
                        "type": "string"
                    },
                    "prefLangId": {
                        "type": "integer"
                    },
                    "profilePic": {
                        "type": "string"
                    },
                    "directLine": {
                        "type": "integer"
                    },
                    "outOfTownAuth": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "integer"
                    },
                    "additonalContactname": {
                        "type": "string"
                    },
                    "additonalContactEmail": {
                        "type": "string"
                    },
                    "additonalContactCountryCode": {
                        "type": "integer"
                    },
                    "additonalContactPhone": {
                        "type": "string"
                    },
                    "relationshipToUser": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "createDate": {
                        "type": "string"
                    },
                    "lastUpdated": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "integer"
                    },
                    "lastUpdatedBy": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "countrycode": {
                        "type": "integer"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "roleid": {
                        "type": "integer"
                    }
                }
            },
            "deptInfo": {
                "type": "array"
            },
            "address": {
                "type": "array"
            },
            "reqtime": {
                "type": "integer"
            }
        },
        "getClientContactId": {
            "type": "object",
            "properties": {
                "clientcontactid": {
                    "type": "string"
                }
            }
        },
        "updtApprvClientContactStatusReq": {
            "type": "object",
            "properties": {
                "clientcontactid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "approvedClientContactResp": {
            "type": "object",
            "required": [
                "totalCount",
                "clientContactDetailsList",
                "reqtime"
            ],
            "properties": {
                "totalCount": {
                    "type": "integer"
                },
                "clientContactDetailsList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "clientcontactid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "countrycode": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "createDate": {
                                "type": "string"
                            },
                            "approvalStatus": {
                                "type": "integer"
                            },
                            "clientName": {
                                "type": "string"
                            },
                            "departmentName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "approvedClientContactReq": {
            "type": "object",
            "properties": {
                "clientcontactname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchto": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "roleid": {
                    "type": "string"
                },
                "departmentid": {
                    "type": "string"
                }
            }
        },
        "selectedClientInfoResp": {
            "type": "object",
            "required": [
                "deptinfo",
                "reqtime"
            ],
            "deptinfo": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "deptid": {
                            "type": "integer"
                        },
                        "department": {
                            "type": "string"
                        },
                        "lat": {
                            "type": "integer"
                        },
                        "lng": {
                            "type": "integer"
                        },
                        "location": {
                            "type": "string"
                        }
                    }
                }
            },
            "reqtime": {
                "type": "integer"
            }
        },
        "updateVendorAddressReq": {
            "type": "object",
            "properties": {
                "vendorid": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "countryid": {
                    "type": "integer"
                },
                "stateid": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                },
                "sameaddress": {
                    "type": "string"
                },
                "billingaddress": {
                    "type": "string"
                },
                "billingcountryid": {
                    "type": "integer"
                },
                "billingstateid": {
                    "type": "integer"
                },
                "billingcity": {
                    "type": "string"
                },
                "billingzipcode": {
                    "type": "string"
                }
            }
        },
        "vendorPaymentResp": {
            "type": "object",
            "required": [
                "paymentMethodTypeId",
                "paymentDetails",
                "notes",
                "reqtime"
            ],
            "properties": {
                "paymentMethodTypeId": {
                    "type": "integer"
                },
                "paymentDetails": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        }
                    }
                },
                "notes": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "vendorAddressResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "isPrimary": {
                        "type": "integer"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "countryId": {
                        "type": "integer"
                    },
                    "stateId": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "sameAsPrimary": {
                        "type": "integer"
                    }
                }
            }
        },
        "getVendorId": {
            "type": "object",
            "properties": {
                "vendorid": {
                    "type": "string"
                }
            }
        },
        "updtClientContacStatustReq": {
            "type": "object",
            "properties": {
                "clientcontactid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "fetchClientContactResp": {
            "type": "object",
            "required": [
                "totalCount",
                "clientContactDetailsList",
                "reqtime"
            ],
            "properties": {
                "totalCount": {
                    "type": "integer"
                },
                "clientContactDetailsList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "clientcontactid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "countrycode": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "createDate": {
                                "type": "string"
                            },
                            "approvalStatus": {
                                "type": "string"
                            },
                            "clientName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "fetchClientContactReq": {
            "type": "object",
            "properties": {
                "clientcontactname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchto": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "languageListReq": {
            "type": "object",
            "required": [
                "languagelist",
                "reqtime"
            ],
            "properties": {
                "languagelist": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "language": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "modifyClientInfoReq": {
            "type": "object",
            "properties": {
                "clientname": {
                    "type": "string"
                },
                "industryid": {
                    "type": "integer"
                },
                "businessemail": {
                    "type": "string"
                },
                "businessphone": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                },
                "purchaseorder": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "companylogo": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "outoftown": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "primaryaddress": {
                    "type": "string"
                },
                "primarycountryid": {
                    "type": "integer"
                },
                "primarystateid": {
                    "type": "integer"
                },
                "primarycity": {
                    "type": "string"
                },
                "primaryzipcode": {
                    "type": "integer"
                },
                "billingaddress": {
                    "type": "string"
                },
                "billingcountryid": {
                    "type": "integer"
                },
                "billingstateid": {
                    "type": "integer"
                },
                "billingcity": {
                    "type": "string"
                },
                "billingzipcode": {
                    "type": "integer"
                },
                "sameaddress": {
                    "type": "string"
                },
                "clientid": {
                    "type": "string"
                }
            }
        },
        "getAllClientInfoResp": {
            "type": "object",
            "required": [
                "clientlist",
                "reqtime"
            ],
            "properties": {
                "clientlist": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "clientName": {
                                "type": "string"
                            },
                            "industryType": {
                                "type": "integer"
                            },
                            "clientid": {
                                "type": "string"
                            },
                            "industry": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "clientInfoResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "userInfo": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "clientName": {
                                    "type": "string"
                                },
                                "industryType": {
                                    "type": "string"
                                },
                                "businessEmail": {
                                    "type": "string"
                                },
                                "businessPhone": {
                                    "type": "string"
                                },
                                "businessCountryCode": {
                                    "type": "string"
                                },
                                "website": {
                                    "type": "string"
                                },
                                "fax": {
                                    "type": "string"
                                },
                                "purchaseOrder": {
                                    "type": "string"
                                },
                                "companyLogo": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "integer"
                                },
                                "fname": {
                                    "type": "string"
                                },
                                "lName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "adminCountryCode": {
                                    "type": "string"
                                },
                                "adminPhone": {
                                    "type": "string"
                                },
                                "isOutOfTown": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "isPrimary": {
                                    "type": "integer"
                                },
                                "addressType": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "countryId": {
                                    "type": "integer"
                                },
                                "stateId": {
                                    "type": "integer"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "zipCode": {
                                    "type": "string"
                                },
                                "sameAsPrimary": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "billAddrees": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "isPrimary": {
                                    "type": "integer"
                                },
                                "addressType": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "countryId": {
                                    "type": "integer"
                                },
                                "stateId": {
                                    "type": "integer"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "zipCode": {
                                    "type": "string"
                                },
                                "sameAsPrimary": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "getClientId": {
            "type": "object",
            "properties": {
                "clientid": {
                    "type": "string"
                }
            }
        },
        "timezoneListResp": {
            "type": "object",
            "required": [
                "timezonelist",
                "reqtime"
            ],
            "properties": {
                "timezonelist": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "timezone": {
                                "type": "string"
                            },
                            "utcDiff": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "modifyClientStatusReq": {
            "clientId": {
                "type": "string"
            },
            "status": {
                "type": "string"
            }
        },
        "clientAccCreateResp": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "clientAccCreateReq": {
            "type": "object",
            "properties": {
                "clientname": {
                    "type": "string"
                },
                "industryId": {
                    "type": "integer"
                },
                "businessemail": {
                    "type": "string"
                },
                "businessphone": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "purchaseorder": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "companylogo": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "outoftown": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "primaryaddress": {
                    "type": "string"
                },
                "primarycountryid": {
                    "type": "integer"
                },
                "primarystateid": {
                    "type": "integer"
                },
                "primarycity": {
                    "type": "string"
                },
                "primaryzipcode": {
                    "type": "string"
                },
                "billingaddress": {
                    "type": "string"
                },
                "billingcountryid": {
                    "type": "integer"
                },
                "billingstateid": {
                    "type": "integer"
                },
                "billingcity": {
                    "type": "string"
                },
                "billingzipcode": {
                    "type": "integer"
                },
                "sameaddress": {
                    "type": "string"
                }
            }
        },
        "clientListResp": {
            "type": "object",
            "required": [
                "totalCount",
                "clientDetailsList",
                "reqtime"
            ],
            "properties": {
                "totalCount": {
                    "type": "integer"
                },
                "clientDetailsList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "clientName": {
                                "type": "string"
                            },
                            "businessemail": {
                                "type": "string"
                            },
                            "lastUploaded": {
                                "type": "string"
                            },
                            "userId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "noOfContacts": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "clientListReq": {
            "type": "object",
            "properties": {
                "clientname": {
                    "type": "string"
                },
                "businessemail": {
                    "type": "string"
                },
                "businessmobile": {
                    "type": "string"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchto": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "exportVendorResp": {
            "type": "object",
            "properties": {
                "fileUrl": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "exportVendorReq": {
            "type": "object",
            "properties": {
                "direc": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "searchinfo": {
                    "type": "string"
                }
            }
        },
        "vendorAccountResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "fName": {
                        "type": "string"
                    },
                    "lName": {
                        "type": "string"
                    },
                    "altEmail": {
                        "type": "string"
                    },
                    "altPhone": {
                        "type": "string"
                    },
                    "whatsapp": {
                        "type": "string"
                    },
                    "genderTypeId": {
                        "type": "string"
                    },
                    "dob": {
                        "type": "string"
                    },
                    "sourceTypeId": {
                        "type": "integer"
                    },
                    "experience": {
                        "type": "string"
                    },
                    "additionalSource": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "timezoneId": {
                        "type": "integer"
                    },
                    "countryId": {
                        "type": "integer"
                    },
                    "ratings": {
                        "type": "integer"
                    },
                    "photo": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "integer"
                    },
                    "mobile": {
                        "type": "string"
                    }
                }
            }
        },
        "createVendorAccResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "createVendorAccReq": {
            "type": "object",
            "required": [
                "email",
                "countryCode",
                "moile",
                "password",
                "vendorTypeId",
                "fName",
                "lName",
                "agencyName",
                "sourceTypeId",
                "additionalSource",
                "countryId",
                "serviceAs",
                "serviceAsName",
                "serviceOffered"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "integer"
                },
                "password": {
                    "type": "integer"
                },
                "vendorTypeId": {
                    "type": "integer"
                },
                "fName": {
                    "type": "string"
                },
                "lName": {
                    "type": "string"
                },
                "agencyName": {
                    "type": "string"
                },
                "sourceTypeId": {
                    "type": "integer"
                },
                "aditionalSource": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer"
                },
                "serviceAs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceOffered": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "subItem": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "subItemName": {
                                            "type": "string"
                                        },
                                        "subData": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "fetchVendorDetailResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "fName": {
                        "type": "string"
                    },
                    "lName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "createDate": {
                        "type": "string"
                    },
                    "agencyName": {
                        "type": "string"
                    },
                    "additionalSource": {
                        "type": "string"
                    },
                    "sourceName": {
                        "type": "string"
                    },
                    "countryiso": {
                        "type": "string"
                    },
                    "vendorType": {
                        "type": "string"
                    },
                    "services": {
                        "type": "string"
                    }
                }
            }
        },
        "fetchVendorDetailReq": {
            "type": "object",
            "properties": {
                "vendorid": {
                    "type": "integer"
                }
            }
        },
        "modifyVendorStatusReq": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "vendorid": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "fetchVendorSignUpResp": {
            "type": "object",
            "required": [
                "details",
                "count",
                "reqtime"
            ],
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "fName": {
                                "type": "string"
                            },
                            "lName": {
                                "type": "string"
                            },
                            "agencyName": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "vendorStatus": {
                                "type": "integer"
                            },
                            "serviceOffered": {
                                "type": "string"
                            }
                        }
                    }
                },
                "count": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "fetchVendorSignUpReq": {
            "type": "object",
            "properties": {
                "direc": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "iat": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                },
                "searchFrom": {
                    "type": "string"
                },
                "searchTo": {
                    "type": "string"
                }
            }
        },
        "fetchTrainingCourseResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "serviceCategoryId": {
                        "type": "integer"
                    },
                    "formatTypeId": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "durationUnit": {
                        "type": "string"
                    },
                    "fees": {
                        "type": "integer"
                    },
                    "publishStatus": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "documentPath": {
                        "type": "string"
                    }
                }
            }
        },
        "publishTrainingCourseReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "updateTrainingStatusResp": {
            "type": "object",
            "properties": {
                "feildCount": {
                    "type": "integer"
                },
                "affectedRows": {
                    "type": "integer"
                },
                "insertId": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "serverStatus": {
                    "type": "integer"
                },
                "warningStatus": {
                    "type": "integer"
                },
                "changeRows": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "fetchTrainingResp": {
            "type": "object",
            "required": [
                "details",
                "count",
                "reqtime"
            ],
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "serviceCategory": {
                                "type": "string"
                            },
                            "formateType": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "integer"
                            },
                            "durationUnit": {
                                "type": "string"
                            },
                            "fess": {
                                "type": "integer"
                            },
                            "publishStatus": {
                                "type": "integer"
                            },
                            "status": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "fetchTrainingReq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "durationUnit": {
                    "type": "integer"
                },
                "dutation": {
                    "type": "string"
                },
                "serviceCategory": {
                    "type": "string"
                },
                "publishCategory": {
                    "type": "string"
                },
                "formateType": {
                    "type": "string"
                },
                "fees": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "searchFrom": {
                    "type": "string"
                },
                "searchTo": {
                    "type": "string"
                }
            }
        },
        "insertTrainingResp": {
            "type": "object",
            "properties": {
                "trainingid": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "insertTrainingReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "serviceCategoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "durationUnit": {
                    "type": "integer"
                },
                "formateTypeId": {
                    "type": "integer"
                },
                "fees": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "publishStatus": {
                    "type": "string"
                },
                "documentPath": {
                    "type": "string"
                }
            }
        },
        "updateServiceStatusReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "updateServiceReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "detailServiceResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                }
            }
        },
        "detailServiceReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "listServiceResp": {
            "type": "object",
            "required": [
                "details",
                "count",
                "reqtime"
            ],
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "createdBy": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            }
                        }
                    }
                },
                "count": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "listServiceReq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                }
            }
        },
        "insertServiceResp": {
            "type": "object",
            "properties": {
                "serviceid": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "insertServiceReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "intendUserResp": {
            "type": "object",
            "required": [
                "intendUserList",
                "reqtime"
            ],
            "properties": {
                "intendUserList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "reqTypeId": {
            "type": "object",
            "properties": {
                "reqUserTypeId": {
                    "type": "integer"
                }
            }
        },
        "updateDocReq": {
            "type": "object",
            "required": [
                "documentID",
                "name",
                "documentTypeId",
                "version",
                "userTypeRoleId",
                "purposeTypeId",
                "message",
                "documentPath",
                "status",
                "intendUser"
            ],
            "properties": {
                "documentID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "documentTypeId": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                },
                "userTypeRoleId": {
                    "type": "integer"
                },
                "purposeTypeId": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "documentPath": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "intendUser": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "docDetails": {
            "type": "object",
            "required": [
                "documentDetails",
                "intendUser",
                "reqtime"
            ],
            "properties": {
                "documentDetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "purposeTypeId": {
                                "type": "integer"
                            },
                            "documentTypeId": {
                                "type": "integer"
                            },
                            "purpose": {
                                "type": "string"
                            },
                            "documenttype": {
                                "type": "string"
                            }
                        }
                    }
                },
                "intendUser": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "docId": {
            "type": "object",
            "properties": {
                "documentId": {
                    "type": "integer"
                }
            }
        },
        "documentListResp": {
            "type": "object",
            "required": [
                "documentList",
                "documentCount",
                "reqtime"
            ],
            "properties": {
                "documentList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "purposeTypeId": {
                                "type": "integer"
                            },
                            "documentTypeId": {
                                "type": "integer"
                            },
                            "roleId": {
                                "type": "integer"
                            },
                            "purpose": {
                                "type": "string"
                            },
                            "documentType": {
                                "type": "string"
                            },
                            "intendUser": {
                                "type": "string"
                            }
                        }
                    }
                },
                "documentCount": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "documentListReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "direc": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "documentTypeId": {
                    "type": "string"
                }
            }
        },
        "lookUpResp": {
            "type": "object",
            "required": [
                "lookUpData",
                "reqtime"
            ],
            "properties": {
                "lookUpData": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "reqtime": {
                        "type": "integer"
                    }
                }
            },
            "lookUpReq": {
                "type": "object",
                "properties": {
                    "lookuptype": {
                        "type": "string"
                    }
                }
            },
            "stateList": {
                "type": "object",
                "required": [
                    "stateList",
                    "reqtime"
                ],
                "properties": {
                    "stateList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "countryId": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "integer"
                }
            }
        },
        "countryList": {
            "type": "object",
            "required": [
                "countryInfo",
                "reqtime"
            ],
            "properties": {
                "countryInfo": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "shortcode": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "clientDeptStatusUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "clientDeptByParentId": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "department": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "sub": {
                        "type": "string"
                    },
                    "usercount": {
                        "type": "integer"
                    },
                    "users": {
                        "type": "string"
                    }
                }
            }
        },
        "adminStaffExportResp": {
            "type": "object",
            "properties": {
                "fileUrl": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "adminListSearchResp": {
            "type": "object",
            "required": [
                "adminStuffList",
                "staffcount",
                "reqtime"
            ],
            "properties": {
                "adminStuffList": {
                    "type": "array",
                    "items": {
                        "userId": {
                            "type": "string"
                        },
                        "userTypeId": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "countrycode": {
                            "type": "integer"
                        },
                        "mobile": {
                            "type": "integer"
                        },
                        "lastUpdated": {
                            "type": "string"
                        },
                        "rolename": {
                            "type": "string"
                        }
                    }
                },
                "staffcount": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "fetchAdminListBySearch": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "integer"
                },
                "orderby": {
                    "type": "string"
                },
                "direc": {
                    "type": "string"
                },
                "searchto": {
                    "type": "string"
                },
                "searchfrom": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "userpasswordreset": {
            "type": "object",
            "properties": {
                "staffId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "getadstaffsearch": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "adminStuffList",
                    "staffcount"
                ],
                "properties": {
                    "adminStuffList": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "string"
                            },
                            "userTypeId": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "integer"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "rolename": {
                                "type": "string"
                            }
                        }
                    },
                    "staffcount": {
                        "type": "integer"
                    }
                }
            }
        },
        "adstaffsearchfrom": {
            "type": "object",
            "properties": {
                "startfrom": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "integer"
                }
            }
        },
        "fetchActiveUsersResp": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            }
        },
        "fetchActiveParentResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "fetchActiveParent": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                }
            }
        },
        "getDetailByClientDept": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "integer"
                    },
                    "masterDepartmentId": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "clientid": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "sub": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "loc": {
                        "type": "array",
                        "items": {
                            "lat": {
                                "type": "string"
                            },
                            "lng": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "updateClientDept": {
            "required": [
                "masterDepartmentId",
                "parentId",
                "status",
                "clientId",
                "notes",
                "loc",
                "id"
            ],
            "properties": {
                "masterDepartmentId": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "clientId": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "loc": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "string"
                            },
                            "long": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "getClientDeptList": {
            "required": [
                "staffdetails",
                "reqtime"
            ],
            "properties": {
                "staffdetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "department": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "notes": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "subDept": {
                                "type": "string"
                            },
                            "user": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "count": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "staffDetails": {
            "type": "object",
            "properties": {
                "staffId": {
                    "type": "string"
                },
                "staffusertypeid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "mobile": {
                    "type": "integer"
                },
                "photo": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "getStaffDetails": {
            "required": [
                "staffdetails",
                "reqtime"
            ],
            "properties": {
                "staffdetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "staffid": {
                                "type": "integer"
                            },
                            "countryCode": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "photo": {
                                "type": "string"
                            },
                            "roleId": {
                                "type": "integer"
                            },
                            "rolename": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "staffIdDet": {
            "type": "object",
            "properties": {
                "staffId": {
                    "type": "string"
                },
                "staffusertypeid": {
                    "type": "integer"
                }
            }
        },
        "insertClientMasterDept2": {
            "required": [
                "masterDepartmentId",
                "parentId",
                "status",
                "clientId",
                "notes",
                "loc"
            ],
            "properties": {
                "masterDepartmentId": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "clientId": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "loc": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "string"
                            },
                            "long": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "insertClientMasterDept1": {
            "required": [
                "masterDepartmentId",
                "parentId",
                "status",
                "clientId",
                "notes",
                "supervisor",
                "loc"
            ],
            "properties": {
                "masterDepartmentId": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "clientId": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "array"
                },
                "loc": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "string"
                            },
                            "long": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "getPlaceCoOrdinate": {
            "required": [
                "coordinatedetails",
                "reqtime"
            ],
            "properties": {
                "coordinatedetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "placename": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getPlaceList": {
            "required": [
                "locaionsuggesion",
                "reqtime"
            ],
            "properties": {
                "locaionsuggesion": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "descripttion": {
                                "type": "string"
                            },
                            "placeid": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "placeName": {
            "type": "object",
            "properties": {
                "place": {
                    "type": "string"
                }
            }
        },
        "getLookUpList": {
            "required": [
                "lookupdata",
                "reqtime"
            ],
            "properties": {
                "lookupdata": {
                    "required": [
                        "CLIENT_CONTACT_TYPE",
                        "COURSE_FORMAT_TYPE",
                        "DOCUMENT_TYPE",
                        "EQUIRY_SERVICE_TYPE",
                        "GENDER_TYPE",
                        "INDUSTRY_TYPE",
                        "PAYMENT_METHOD_TYPE",
                        "PRIORITY_TYPE",
                        "PURPOSE_TYPE",
                        "REJECT_TYPE",
                        "SOURCE_TYPE",
                        "USER_TYPE",
                        "VENDOR_TYPE"
                    ],
                    "properties": {
                        "CLIENT_CONTACT_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "COURSE_FORMAT_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "DOCUMENT_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "EQUIRY_SERVICE_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "GENDER_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "INDUSTRY_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "PAYMENT_METHOD_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "PRIORITY_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "PURPOSE_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "REJECT_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "SOURCE_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "USER_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "VENDOR_TYPE": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "reqtime": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "masterDeptdetails": {
            "type": "array",
            "properties": {
                "type": "object",
                "items": {
                    "industryType": {
                        "type": "integer"
                    },
                    "department": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "subs": {
                        "type": "string"
                    }
                }
            }
        },
        "activeMasterDept": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "department": {
                    "type": "string"
                }
            }
        },
        "masterDeptId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "updateMasterDept2": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "industryType": {
                    "type": "integer"
                },
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subDept": {
                    "type": "array"
                }
            }
        },
        "updateMasterDept1": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "industryType": {
                    "type": "integer"
                },
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "adminStuffChReq": {
            "type": "object",
            "properties": {
                "staffId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "staffUserTypeId": {
                    "type": "integer"
                }
            }
        },
        "getAdminStuff": {
            "required": [
                "adminStuffList",
                "reqtime"
            ],
            "properties": {
                "adminStuffList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userid": {
                                "type": "string"
                            },
                            "userTypeId": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "lastUpload": {
                                "type": "date"
                            },
                            "roleName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "modifyAdminInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "integer"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "getAdminDetails": {
            "required": [
                "adminStuffList",
                "reqtime"
            ],
            "properties": {
                "adminStuffList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "photo": {
                                "type": "string"
                            }
                        }
                    }
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "getMasterDept": {
            "type": "object",
            "required": [
                "Details",
                "count",
                "reqtime"
            ],
            "properties": {
                "Details": {
                    "type": "array",
                    "required": [
                        "id",
                        "department",
                        "status",
                        "sub"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "department": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        },
                        "sub": {
                            "type": "string"
                        }
                    }
                },
                "count": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "fetchMasterDeptReq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "insertMasterDept2": {
            "type": "object",
            "properties": {
                "industryType": {
                    "type": "integer"
                },
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subDept": {
                    "type": "array"
                }
            }
        },
        "insertMasterDept1": {
            "type": "object",
            "properties": {
                "industryType": {
                    "type": "integer"
                },
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "getRoles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "userTypeId": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                }
            }
        },
        "createUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "cuncode": {
                    "type": "integer"
                },
                "phone": {
                    "type": "integer"
                },
                "roleid": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "changePassword": {
            "type": "object",
            "properties": {
                "oldpass": {
                    "type": "string"
                },
                "newpass": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "signInReq": {
            "type": "object",
            "properties": {
                "deviceid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "string"
                },
                "usertypeid": {
                    "type": "integer"
                },
                "reqtime": {
                    "type": "integer"
                }
            }
        },
        "payload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "string"
                },
                "reqtime": {
                    "type": "integer"
                },
                "usertypeid": {
                    "type": "integer"
                }
            }
        },
        "success": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "forgetPassword": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "string"
                },
                "usertypeid": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "string"
                },
                "usertypeid": {
                    "type": "integer"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "signOut": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "string"
                },
                "usertypeid": {
                    "type": "integer"
                },
                "requestTime": {
                    "type": "string"
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "task": {
                    "type": "string"
                },
                "assignee": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "invalidError": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "unauthorizedError": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}